import type { MetadataRoute } from "next"

async function getWordPressArticles() {
  try {
    const response = await fetch(
      `https://lunaro.sofia-today.org/wp-json/wp/v2/posts?per_page=500&_fields=slug,modified,date,status`,
      { next: { revalidate: 1800 } } // –∫–µ—à–∏—Ä–∞–π –∑–∞ 30 –º–∏–Ω—É—Ç–∏ –∑–∞ –ø–æ-–∞–∫—Ç—É–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏
    )

    if (!response.ok) {
      console.error("Error fetching WP articles:", response.statusText)
      return []
    }

    const articles = await response.json()
    // –§–∏–ª—Ç—Ä–∏—Ä–∞–π —Å–∞–º–æ –ø—É–±–ª–∏–∫—É–≤–∞–Ω–∏—Ç–µ —Å—Ç–∞—Ç–∏–∏
    return articles.filter((article: any) => article.status === 'publish')
  } catch (error) {
    console.error("Error fetching articles for sitemap:", error)
    return []
  }
}

export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
  const baseUrl = "https://lunaro.news"
  const now = new Date()

  // üîπ –°—Ç–∞—Ç–∏—á–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∏
  const staticPages = [
    // –ì–ª–∞–≤–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –º–∞–∫—Å–∏–º–∞–ª–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    { url: baseUrl, lastModified: now, changeFrequency: "hourly" as const, priority: 1.0 },
    
    // –û—Å–Ω–æ–≤–Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - –≤–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    { url: `${baseUrl}/cybersecurity`, lastModified: now, changeFrequency: "daily" as const, priority: 0.95 },
    { url: `${baseUrl}/seo`, lastModified: now, changeFrequency: "daily" as const, priority: 0.95 },
    { url: `${baseUrl}/ai`, lastModified: now, changeFrequency: "daily" as const, priority: 0.95 },
    { url: `${baseUrl}/analizi`, lastModified: now, changeFrequency: "daily" as const, priority: 0.9 },
    
    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∏ —Ä–µ—Å—É—Ä—Å–∏ - –≤–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    { url: `${baseUrl}/tools`, lastModified: now, changeFrequency: "weekly" as const, priority: 0.85 },
    { url: `${baseUrl}/tutorials`, lastModified: now, changeFrequency: "weekly" as const, priority: 0.85 },
    { url: `${baseUrl}/glossary`, lastModified: now, changeFrequency: "monthly" as const, priority: 0.8 },
    
    // –ó–∞–ø–∞–∑–µ–Ω–∏ —Å—Ç–∞—Ç–∏–∏ –∏ —Ç—ä—Ä—Å–µ–Ω–µ
    { url: `${baseUrl}/saved`, lastModified: now, changeFrequency: "daily" as const, priority: 0.7 },
    { url: `${baseUrl}/search`, lastModified: now, changeFrequency: "daily" as const, priority: 0.7 },
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏
    { url: `${baseUrl}/about`, lastModified: now, changeFrequency: "monthly" as const, priority: 0.6 },
    { url: `${baseUrl}/contact`, lastModified: now, changeFrequency: "monthly" as const, priority: 0.6 },
    
    // –ü—Ä–∞–≤–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ - –Ω–∏—Å—ä–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    { url: `${baseUrl}/privacy`, lastModified: now, changeFrequency: "yearly" as const, priority: 0.3 },
    { url: `${baseUrl}/terms`, lastModified: now, changeFrequency: "yearly" as const, priority: 0.3 },
    { url: `${baseUrl}/cookies`, lastModified: now, changeFrequency: "yearly" as const, priority: 0.3 },
  ]

  // üîπ –î–∏–Ω–∞–º–∏—á–Ω–∏ —Å—Ç–∞—Ç–∏–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∏
  const articles = await getWordPressArticles()
  const articlePages = articles.map((article: any) => {
    const articleDate = new Date(article.date)
    const daysSincePublished = Math.floor((now.getTime() - articleDate.getTime()) / (1000 * 60 * 60 * 24))
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ä—Ç –Ω–∞–º–∞–ª—è–≤–∞ —Å –≤—Ä–µ–º–µ—Ç–æ, –Ω–æ –Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç–∏–∏ –∏–º–∞—Ç –≤–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    let priority = 0.8
    if (daysSincePublished <= 7) priority = 0.9 // –ù–æ–≤–∏ —Å—Ç–∞—Ç–∏–∏
    else if (daysSincePublished <= 30) priority = 0.8 // –ú–µ—Å–µ—á–Ω–∏ —Å—Ç–∞—Ç–∏–∏
    else if (daysSincePublished <= 90) priority = 0.7 // –¢—Ä–∏–º–µ—Å–µ—á–Ω–∏ —Å—Ç–∞—Ç–∏–∏
    else priority = 0.6 // –°—Ç–∞—Ä–∏ —Å—Ç–∞—Ç–∏–∏

    return {
      url: `${baseUrl}/article/${article.slug}`,
      lastModified: article.modified ? new Date(article.modified) : articleDate,
      changeFrequency: daysSincePublished <= 30 ? "weekly" as const : "monthly" as const,
      priority,
    }
  })

  // üîπ –°–æ—Ä—Ç–∏—Ä–∞–π –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (–Ω–∞–π-–≤–∏—Å–æ–∫–∏—Ç–µ –ø—ä—Ä–≤–∏)
  const allPages = [...staticPages, ...articlePages]
  allPages.sort((a, b) => (b.priority || 0) - (a.priority || 0))

  return allPages
}
